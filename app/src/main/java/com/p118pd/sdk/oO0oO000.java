package com.p118pd.sdk;

import android.support.p000v4.media.RatingCompat;
import androidx.exifinterface.media.ExifInterface;
import java.util.HashMap;

/* renamed from: com.pd.sdk.oO0oO000 */
public abstract class oO0oO000 extends AbstractC7922oO0o0O0O {
    public static final int OooO = 262;
    public static final int OooO00o = 1;
    public static final int OooO0O0 = 2;
    public static final int OooO0OO = 254;
    public static final int OooO0Oo = 255;
    public static final int OooO0o = 257;
    public static final int OooO0o0 = 256;
    public static final int OooO0oO = 258;
    public static final int OooO0oo = 259;
    public static final int OooOO0 = 263;
    public static final int OooOO0O = 266;
    public static final int OooOO0o = 269;
    public static final int OooOOO = 271;
    public static final int OooOOO0 = 270;
    public static final int OooOOOO = 272;
    public static final int OooOOOo = 273;
    public static final int OooOOo = 277;
    public static final int OooOOo0 = 274;
    public static final int OooOOoo = 278;
    public static final int OooOo = 283;
    public static final int OooOo0 = 280;
    public static final int OooOo00 = 279;
    public static final int OooOo0O = 281;
    public static final int OooOo0o = 282;
    public static final int OooOoO = 285;
    public static final int OooOoO0 = 284;
    public static final int OooOoOO = 296;
    public static final int OooOoo = 301;
    public static final int OooOoo0 = 297;
    public static final int OooOooO = 305;
    public static final int OooOooo = 306;
    public static final int Oooo = 342;
    public static final int Oooo0 = 318;
    public static final int Oooo000 = 315;
    public static final int Oooo00O = 316;
    public static final int Oooo00o = 317;
    public static final int Oooo0O0 = 319;
    public static final int Oooo0OO = 322;
    public static final int Oooo0o = 324;
    public static final int Oooo0o0 = 323;
    public static final int Oooo0oO = 325;
    public static final int Oooo0oo = 330;
    public static final int OoooO = 517;
    public static final int OoooO0 = 512;
    public static final int OoooO00 = 347;
    public static final int OoooO0O = 515;
    public static final int OoooOO0 = 518;
    public static final int OoooOOO = 520;
    public static final int OoooOOo = 521;
    public static final int OoooOo0 = 529;
    public static final int OoooOoO = 530;
    public static final int OoooOoo = 531;
    public static final int Ooooo00 = 532;
    public static final int Ooooo0o = 559;
    public static final int OooooO0 = 700;
    public static final int OooooOO = 4096;
    public static final int OooooOo = 4097;
    public static final int Oooooo = 18246;
    public static final int Oooooo0 = 4098;
    public static final int OoooooO = 33421;
    public static final int Ooooooo = 33422;
    public static final int o000 = 40960;
    public static final int o0000 = 37384;
    public static final int o00000 = 37122;
    public static final int o000000 = 36867;
    public static final int o000000O = 36868;
    public static final int o000000o = 37121;
    public static final int o00000O = 37378;
    public static final int o00000O0 = 37377;
    public static final int o00000OO = 37379;
    public static final int o00000Oo = 37380;
    public static final int o00000o0 = 37381;
    public static final int o00000oO = 37383;
    @Deprecated
    public static final int o00000oo = 37384;
    public static final int o0000O = 37391;
    public static final int o0000O0 = 37388;
    public static final int o0000O00 = 37385;
    public static final int o0000O0O = 37389;
    public static final int o0000OO = 37394;
    public static final int o0000OO0 = 37393;
    public static final int o0000OOO = 37395;
    public static final int o0000OOo = 37396;
    public static final int o0000Oo = 37398;
    public static final int o0000Oo0 = 37397;
    public static final int o0000OoO = 37500;
    public static final int o0000Ooo = 37382;
    public static final int o0000o = 37522;
    public static final int o0000o0 = 37510;
    public static final int o0000o0O = 37520;
    public static final int o0000o0o = 37521;
    public static final int o0000oO = 37387;
    public static final int o0000oO0 = 40091;
    public static final int o0000oOO = 40092;
    public static final int o0000oOo = 40093;
    public static final int o0000oo = 37386;
    public static final int o0000oo0 = 40094;
    public static final int o0000ooO = 40095;
    public static final int o000O = 41985;
    public static final int o000O0 = 41488;
    public static final int o000O00 = 41486;
    public static final int o000O000 = 40961;
    public static final int o000O00O = 41487;
    public static final int o000O0O = 41483;
    public static final int o000O0O0 = 41495;
    public static final int o000O0Oo = 41492;
    public static final int o000O0o = 40963;
    public static final int o000O0o0 = 41728;
    public static final int o000O0oO = 41729;
    public static final int o000O0oo = 41730;
    public static final int o000OO = 37390;
    public static final int o000OO00 = 41986;
    public static final int o000OO0O = 41493;
    public static final int o000OO0o = 41988;
    public static final int o000OOO = 41989;
    public static final int o000OOo = 36864;
    public static final int o000OOo0 = 41990;
    public static final int o000OOoO = 41991;
    public static final int o000Oo = 41995;
    public static final int o000Oo0 = 41484;
    public static final int o000Oo00 = 41992;
    public static final int o000Oo0O = 41993;
    public static final int o000Oo0o = 41994;
    public static final int o000OoO = 40962;
    public static final int o000OoOO = 41996;
    public static final int o000OoOo = 42016;
    public static final int o000Ooo = 40964;
    public static final int o000Ooo0 = 42032;
    public static final int o000OooO = 42033;
    public static final int o000Oooo = 42034;
    public static final int o000o00 = 42036;
    public static final int o000o000 = 42035;
    public static final int o000o00O = 42037;
    public static final int o000o00o = 42240;
    public static final int o000o0O = 50899;
    public static final int o000o0O0 = 50898;
    public static final int o000o0OO = 59932;
    public static final int o000o0Oo = 65002;
    public static final int o000oOoO = 519;
    public static final int o00O0O = 33434;
    public static final int o00Oo0 = 33437;
    public static final int o00Ooo = 33723;
    public static final int o00o0O = 34675;
    public static final int o00oO0O = 34856;
    public static final int o00oO0o = 34855;
    public static final int o00ooo = 34850;
    public static final int o0O0O00 = 34859;
    public static final int o0OO00O = 34866;
    public static final int o0OOO0o = 34864;
    public static final int o0Oo0oo = 34865;
    public static final int o0OoO0o = 41987;
    public static final int o0OoOo0 = 33423;
    public static final int o0ooOO0 = 34857;
    public static final int o0ooOOo = 34858;
    public static final int o0ooOoO = 34859;
    public static final int oo000o = 34852;
    public static final int oo0o0Oo = 34858;
    public static final int ooOO = 33432;
    public static final int oooo00o = 50341;

    public static void OooO00o(HashMap<Integer, String> hashMap) {
        hashMap.put(1, "Interoperability Index");
        hashMap.put(2, "Interoperability Version");
        hashMap.put(254, "New Subfile Type");
        hashMap.put(255, "Subfile Type");
        hashMap.put(256, "Image Width");
        hashMap.put(257, "Image Height");
        hashMap.put(258, "Bits Per Sample");
        hashMap.put(259, ExifInterface.f14135OooO0o);
        hashMap.put(262, "Photometric Interpretation");
        hashMap.put(263, "Thresholding");
        hashMap.put(266, "Fill Order");
        hashMap.put(269, "Document Name");
        hashMap.put(270, "Image Description");
        hashMap.put(271, ExifInterface.f14199OooOoo0);
        hashMap.put(272, ExifInterface.f14197OooOoo);
        hashMap.put(273, "Strip Offsets");
        hashMap.put(274, ExifInterface.f14146OooO0oo);
        hashMap.put(277, "Samples Per Pixel");
        hashMap.put(278, "Rows Per Strip");
        hashMap.put(279, "Strip Byte Counts");
        hashMap.put(280, "Minimum Sample Value");
        hashMap.put(281, "Maximum Sample Value");
        hashMap.put(282, "X Resolution");
        hashMap.put(283, "Y Resolution");
        hashMap.put(284, "Planar Configuration");
        hashMap.put(285, "Page Name");
        hashMap.put(296, "Resolution Unit");
        hashMap.put(Integer.valueOf((int) OooOoo0), "Page Number");
        hashMap.put(301, "Transfer Function");
        hashMap.put(305, ExifInterface.f14201OooOooO);
        hashMap.put(306, "Date/Time");
        hashMap.put(315, ExifInterface.f14203OooOooo);
        hashMap.put(Integer.valueOf((int) Oooo00o), "Predictor");
        hashMap.put(316, "Host Computer");
        hashMap.put(Integer.valueOf((int) Oooo0), "White Point");
        hashMap.put(Integer.valueOf((int) Oooo0O0), "Primary Chromaticities");
        hashMap.put(Integer.valueOf((int) Oooo0OO), "Tile Width");
        hashMap.put(Integer.valueOf((int) Oooo0o0), "Tile Length");
        hashMap.put(Integer.valueOf((int) Oooo0o), "Tile Offsets");
        hashMap.put(Integer.valueOf((int) Oooo0oO), "Tile Byte Counts");
        hashMap.put(330, "Sub IFD Pointer(s)");
        hashMap.put(Integer.valueOf((int) Oooo), "Transfer Range");
        hashMap.put(Integer.valueOf((int) OoooO00), "JPEG Tables");
        hashMap.put(512, "JPEG Proc");
        hashMap.put(515, "JPEG Restart Interval");
        hashMap.put(517, "JPEG Lossless Predictors");
        hashMap.put(518, "JPEG Point Transforms");
        hashMap.put(519, "JPEGQ Tables");
        hashMap.put(520, "JPEGDC Tables");
        hashMap.put(521, "JPEGAC Tables");
        hashMap.put(529, "YCbCr Coefficients");
        hashMap.put(530, "YCbCr Sub-Sampling");
        hashMap.put(531, "YCbCr Positioning");
        hashMap.put(532, "Reference Black/White");
        hashMap.put(559, "Strip Row Counts");
        hashMap.put(700, "Application Notes");
        hashMap.put(4096, "Related Image File Format");
        hashMap.put(4097, "Related Image Width");
        hashMap.put(4098, "Related Image Height");
        hashMap.put(Integer.valueOf((int) Oooooo), RatingCompat.TAG);
        hashMap.put(Integer.valueOf((int) OoooooO), "CFA Repeat Pattern Dim");
        hashMap.put(Integer.valueOf((int) Ooooooo), "CFA Pattern");
        hashMap.put(Integer.valueOf((int) o0OoOo0), "Battery Level");
        hashMap.put(Integer.valueOf((int) ooOO), ExifInterface.f14209Oooo000);
        hashMap.put(Integer.valueOf((int) o00O0O), "Exposure Time");
        hashMap.put(Integer.valueOf((int) o00Oo0), "F-Number");
        hashMap.put(33723, "IPTC/NAA");
        hashMap.put(34675, "Inter Color Profile");
        hashMap.put(Integer.valueOf((int) o00ooo), "Exposure Program");
        hashMap.put(Integer.valueOf((int) oo000o), "Spectral Sensitivity");
        hashMap.put(Integer.valueOf((int) o00oO0o), "ISO Speed Ratings");
        hashMap.put(Integer.valueOf((int) o00oO0O), "Opto-electric Conversion Function (OECF)");
        hashMap.put(Integer.valueOf((int) o0ooOO0), "Interlace");
        hashMap.put(34858, "Time Zone Offset");
        hashMap.put(34859, "Self Timer Mode");
        hashMap.put(Integer.valueOf((int) o0OOO0o), "Sensitivity Type");
        hashMap.put(Integer.valueOf((int) o0Oo0oo), "Standard Output Sensitivity");
        hashMap.put(Integer.valueOf((int) o0OO00O), "Recommended Exposure Index");
        hashMap.put(34858, "Time Zone Offset");
        hashMap.put(34859, "Self Timer Mode");
        hashMap.put(36864, "Exif Version");
        hashMap.put(Integer.valueOf((int) o000000), "Date/Time Original");
        hashMap.put(Integer.valueOf((int) o000000O), "Date/Time Digitized");
        hashMap.put(Integer.valueOf((int) o000000o), "Components Configuration");
        hashMap.put(Integer.valueOf((int) o00000), "Compressed Bits Per Pixel");
        hashMap.put(Integer.valueOf((int) o00000O0), "Shutter Speed Value");
        hashMap.put(Integer.valueOf((int) o00000O), "Aperture Value");
        hashMap.put(Integer.valueOf((int) o00000OO), "Brightness Value");
        hashMap.put(Integer.valueOf((int) o00000Oo), "Exposure Bias Value");
        hashMap.put(Integer.valueOf((int) o00000o0), "Max Aperture Value");
        hashMap.put(Integer.valueOf((int) o0000Ooo), "Subject Distance");
        hashMap.put(Integer.valueOf((int) o00000oO), "Metering Mode");
        hashMap.put(37384, "White Balance");
        hashMap.put(Integer.valueOf((int) o0000O00), ExifInterface.f14327oo000o);
        hashMap.put(Integer.valueOf((int) o0000oo), "Focal Length");
        hashMap.put(Integer.valueOf((int) o0000oO), "Flash Energy");
        hashMap.put(Integer.valueOf((int) o0000O0), "Spatial Frequency Response");
        hashMap.put(Integer.valueOf((int) o0000O0O), "Noise");
        hashMap.put(Integer.valueOf((int) o000OO), "Focal Plane X Resolution");
        hashMap.put(Integer.valueOf((int) o0000O), "Focal Plane Y Resolution");
        hashMap.put(Integer.valueOf((int) o0000OO0), "Image Number");
        hashMap.put(Integer.valueOf((int) o0000OO), "Security Classification");
        hashMap.put(Integer.valueOf((int) o0000OOO), "Image History");
        hashMap.put(Integer.valueOf((int) o0000OOo), "Subject Location");
        hashMap.put(Integer.valueOf((int) o0000Oo0), "Exposure Index");
        hashMap.put(Integer.valueOf((int) o0000Oo), "TIFF/EP Standard ID");
        hashMap.put(Integer.valueOf((int) o0000OoO), "Makernote");
        hashMap.put(Integer.valueOf((int) o0000o0), "User Comment");
        hashMap.put(Integer.valueOf((int) o0000o0O), "Sub-Sec Time");
        hashMap.put(Integer.valueOf((int) o0000o0o), "Sub-Sec Time Original");
        hashMap.put(Integer.valueOf((int) o0000o), "Sub-Sec Time Digitized");
        hashMap.put(Integer.valueOf((int) o0000oO0), "Windows XP Title");
        hashMap.put(Integer.valueOf((int) o0000oOO), "Windows XP Comment");
        hashMap.put(Integer.valueOf((int) o0000oOo), "Windows XP Author");
        hashMap.put(Integer.valueOf((int) o0000oo0), "Windows XP Keywords");
        hashMap.put(Integer.valueOf((int) o0000ooO), "Windows XP Subject");
        hashMap.put(Integer.valueOf((int) o000), "FlashPix Version");
        hashMap.put(40961, "Color Space");
        hashMap.put(Integer.valueOf((int) o000OoO), "Exif Image Width");
        hashMap.put(Integer.valueOf((int) o000O0o), "Exif Image Height");
        hashMap.put(Integer.valueOf((int) o000Ooo), "Related Sound File");
        hashMap.put(Integer.valueOf((int) o000O0O), "Flash Energy");
        hashMap.put(Integer.valueOf((int) o000Oo0), "Spatial Frequency Response");
        hashMap.put(Integer.valueOf((int) o000O00), "Focal Plane X Resolution");
        hashMap.put(Integer.valueOf((int) o000O00O), "Focal Plane Y Resolution");
        hashMap.put(Integer.valueOf((int) o000O0), "Focal Plane Resolution Unit");
        hashMap.put(Integer.valueOf((int) o000O0Oo), "Subject Location");
        hashMap.put(Integer.valueOf((int) o000OO0O), "Exposure Index");
        hashMap.put(Integer.valueOf((int) o000O0O0), "Sensing Method");
        hashMap.put(Integer.valueOf((int) o000O0o0), "File Source");
        hashMap.put(Integer.valueOf((int) o000O0oO), "Scene Type");
        hashMap.put(Integer.valueOf((int) o000O0oo), "CFA Pattern");
        hashMap.put(Integer.valueOf((int) o000O), "Custom Rendered");
        hashMap.put(Integer.valueOf((int) o000OO00), "Exposure Mode");
        hashMap.put(Integer.valueOf((int) o0OoO0o), "White Balance Mode");
        hashMap.put(Integer.valueOf((int) o000OO0o), "Digital Zoom Ratio");
        hashMap.put(Integer.valueOf((int) o000OOO), "Focal Length 35");
        hashMap.put(Integer.valueOf((int) o000OOo0), "Scene Capture Type");
        hashMap.put(Integer.valueOf((int) o000OOoO), "Gain Control");
        hashMap.put(Integer.valueOf((int) o000Oo00), ExifInterface.o0000Ooo);
        hashMap.put(Integer.valueOf((int) o000Oo0O), ExifInterface.o00000oO);
        hashMap.put(Integer.valueOf((int) o000Oo0o), ExifInterface.o00000oo);
        hashMap.put(Integer.valueOf((int) o000Oo), "Device Setting Description");
        hashMap.put(Integer.valueOf((int) o000OoOO), "Subject Distance Range");
        hashMap.put(Integer.valueOf((int) o000OoOo), "Unique Image ID");
        hashMap.put(Integer.valueOf((int) o000Ooo0), "Camera Owner Name");
        hashMap.put(Integer.valueOf((int) o000OooO), "Body Serial Number");
        hashMap.put(Integer.valueOf((int) o000Oooo), "Lens Specification");
        hashMap.put(Integer.valueOf((int) o000o000), "Lens Make");
        hashMap.put(Integer.valueOf((int) o000o00), "Lens Model");
        hashMap.put(Integer.valueOf((int) o000o00O), "Lens Serial Number");
        hashMap.put(Integer.valueOf((int) o000o00o), ExifInterface.f14215Oooo0O0);
        hashMap.put(Integer.valueOf((int) oooo00o), "Print Image Matching (PIM) Info");
        hashMap.put(Integer.valueOf((int) o000o0O0), "Panasonic Title");
        hashMap.put(Integer.valueOf((int) o000o0O), "Panasonic Title (2)");
        hashMap.put(Integer.valueOf((int) o000o0OO), "Padding");
        hashMap.put(Integer.valueOf((int) o000o0Oo), "Lens");
    }
}
